name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: voice-assistant-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Build the Docker image from the Dockerfile
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest .

      # Log in to Docker Hub using secrets stored in GitHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Deploy to your EC2 instance via SSH
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Set error handling
            set -e
            
            # Create models directory if it doesn't exist
            mkdir -p ~/models
            
            # Pull the latest Docker image from Docker Hub
            echo "Pulling Docker image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest || {
              echo "Failed to pull Docker image"
              exit 1
            }
            
            # Stop and remove any running container if exists
            echo "Stopping existing container..."
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            
            # Verify .env.back file exists
            if [ ! -f /home/ec2-user/.env.back ]; then
              echo "Error: .env.back file not found at /home/ec2-user/.env.back"
              exit 1
            fi
            
            # Run the new container
            echo "Starting new container..."
            docker run --name ${{ env.APP_NAME }} \
              --env-file /home/ec2-user/.env.back \
              -v ~/models:/app/models \
              -d \
              -p 80:3000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest || {
                echo "Failed to start container"
                exit 1
              }
            
            echo "Deployment completed successfully"
